# Playwright Challenge
  This current project was created by a initial challenge to implement playwright framework as a automation technology tool


## Playwright + TypeScript + Cucumber Project Setup
    This document provides step-by-step instructions for setting up a Playwright project integrated with TypeScript and Cucumber for behavior-driven development (BDD).


### Prerequisites

#### 
    *  Before starting, ensure you have the following installed on your system:

##### 
    * Node.js (version 16 or higher)

##### 
     * npm (comes with Node.js)

##### 
    * Git

##### 
    * A code editor, preferably Visual Studio Code


#### Starting project configuration


###### Initialize a Node.js Project:
        npm init

###### Package dependencies: 
    Typescript 

     npm i typescript -D
     npm  i ts-node -D


    Playwright:
     npm i playwright -D

    Cucumber:
     
      npm i @cucumber/cucumber -D

      npm i cucumber-html-reporter -D

    
     Mannaging Environment variables:

      npm i dotenv -D

     Creating ts-config  file:
      
      npx tsc --init  (creates a ts-config. file)



###### Run features: 

       npx cucumber-js




#### Execute scenarios:
     code: npx playwright test



#### Show generated report:
     code: npx playwright show-report






Guia de Instalación - proyecto playwright:


* PATRÓN DE DISEÑO: POM

* BDD  - GHERKIN 



** CASOS DE PRUEBA 

- Técnica de diseño: tabla de decisión. VF


 - LOGIN: Automatice el proceso de inicio de sesión en la plataforma.




- Técnica ?

- CREACIÓN DE EMPLEADO (PERSONAL): 
* Cree un nuevo empleado con detalles completos.
* Valide que el empleado ha sido creado correctamente y que aparece en la lista de empleados

 




- Técnica ? 

- CREACIÓN DE USUARIO: 


